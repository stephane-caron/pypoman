name: CI

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]
    workflow_dispatch:

jobs:
    coverage:
        name: "Coverage"
        runs-on: ubuntu-latest

        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v3

            - name: "Set up Python 3.9"
              uses: actions/setup-python@v4
              with:
                  python-version: "3.9"

            - name: "Install Debian dependencies"
              run: |
                  sudo apt-get install -y libcdd-dev libgmp3-dev

            - name: "Install PyPI dependencies"
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install coveralls tox

            - name: "Check code coverage"
              run: |
                  tox -e coverage

            - name: "Coveralls"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  coveralls --service=github --rcfile=pyproject.toml

    lint:
        name: "Code style"
        runs-on: ubuntu-latest

        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v3

            - name: "Set up Python ${{ matrix.python-version }}"
              uses: actions/setup-python@v4
              with:
                  python-version: "${{ matrix.python-version }}"

            - name: "Install Debian dependencies"
              run: |
                  sudo apt-get install -y libcdd-dev libgmp3-dev

            - name: "Install PyPI dependencies"
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install tox

            - name: "Test with tox for ${{ matrix.os }}"
              run: |
                  tox -e lint
              env:
                  PLATFORM: ubuntu-latest

    test:
        name: "Test ${{ matrix.os }} with Python ${{ matrix.python-version }}"
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest, macos-13]
                python-version: ["3.9", "3.10", "3.11", "3.12"]

        defaults:
            run:
                # See https://github.com/mamba-org/setup-micromamba?tab=readme-ov-file#about-login-shells
                shell: bash -leo pipefail {0}

        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v3

            - name: "Install GMP (Ubuntu)"
              if: matrix.os == 'ubuntu-latest'
              run: |
                  sudo apt-get install -y libgmp3-dev

            - name: "Install GMP (macOS)"
              if: ${{ matrix.os == 'macos-13' }}
              run: |
                  brew install gmp

            - name: "Install Conda environment with Micromamba"
              uses: mamba-org/setup-micromamba@v1
              with:
                  micromamba-version: '1.5.8-0'
                  environment-name: pypoman_test_env
                  create-args: >-
                      python=${{ matrix.python-version }}
                      cddlib
                      cvxopt>=1.2.6
                      matplotlib>=3.3.4
                      numpy>=1.15.4
                      pyclipper>=1.3.0
                      qpsolvers>=3.3.1
                      scipy>=1.7.0
                  cache-environment: true
                  post-cleanup: 'all'

            - name: "Install cdd and pycddlib"
              run: |
                  pip install pycddlib

            - name: "Run unit tests"
              run: |
                  python -m unittest discover

    ci_success:
        name: "CI success"
        runs-on: ubuntu-latest
        needs: [coverage, lint, test]
        steps:
            - run: echo "CI workflow completed successfully"
